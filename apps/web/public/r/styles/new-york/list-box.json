{
  "name": "list-box",
  "type": "registry:ui",
  "dependencies": ["react-aria-components"],
  "files": [
    {
      "path": "ui/list-box.tsx",
      "content": "'use client';\n\nimport {\n  Collection as AriaCollection,\n  composeRenderProps,\n  Header as AriaHeader,\n  ListBox as AriaListBox,\n  ListBoxItem as AriaListBoxItem,\n  type ListBoxItemProps as AriaListBoxItemProps,\n  type ListBoxProps as AriaListBoxProps,\n  Section as AriaSection,\n} from 'react-aria-components';\n\nimport { cn } from '@/libs/utils';\n\nimport { Icons } from './icons';\n\n/**\n * Represents a ListBoxSection component.\n * This component is used to display a section within a list box.\n */\nconst ListBoxSection = AriaSection;\n\n/**\n * Represents a collection of list boxes.\n */\nconst ListBoxCollection = AriaCollection;\n\n/**\n * ListBox component.\n *\n * @component\n * @template T - The type of the items in the list box.\n * @param {AriaListBoxProps<T>} props - The props for the ListBox component.\n * @param {string} [props.className] - The class name for the ListBox component.\n * @returns {JSX.Element} - The rendered ListBox component.\n */\nfunction ListBox<T extends object>({\n  className,\n  ...props\n}: AriaListBoxProps<T>): JSX.Element {\n  return (\n    <AriaListBox\n      className={composeRenderProps(className, (className) =>\n        cn(\n          className,\n          'group overflow-auto rounded-md border bg-popover p-1 text-popover-foreground shadow-md outline-none',\n          /* Empty */\n          'data-[empty]:p-6 data-[empty]:text-center data-[empty]:text-sm',\n        ),\n      )}\n      {...props}\n    />\n  );\n}\n\n/**\n * ListBoxItem component represents an item in a list box.\n *\n * @component\n * @template T - The type of the item.\n * @param {AriaListBoxItemProps<T>} props - The props for the ListBoxItem component.\n * @param {string} [props.className] - The class name for the ListBoxItem component.\n * @param {React.ReactNode} [props.children] - The children of the ListBoxItem component.\n * @returns {JSX.Element} - The rendered ListBoxItem component.\n */\nfunction ListBoxItem<T extends object>({\n  className,\n  children,\n  ...props\n}: AriaListBoxItemProps<T>): JSX.Element {\n  return (\n    <AriaListBoxItem\n      className={composeRenderProps(className, (className) =>\n        cn(\n          'relative flex w-full cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none',\n          /* Disabled */\n          'data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n          /* Focused */\n          'data-[focused]:bg-accent data-[focused]:text-accent-foreground',\n          /* Hovered */\n          'data-[hovered]:bg-accent data-[hovered]:text-accent-foreground',\n          /* Selection */\n          'data-[selection-mode]:pr-8',\n          className,\n        ),\n      )}\n      textValue={\n        props.textValue ?? (typeof children === 'string' ? children : undefined)\n      }\n      {...props}\n    >\n      {composeRenderProps(children, (children, renderProps) => (\n        <>\n          {renderProps.isSelected && (\n            <span className=\"absolute right-2 flex size-4 items-center justify-center\">\n              <Icons.Check className=\"size-4\" />\n            </span>\n          )}\n          {children}\n        </>\n      ))}\n    </AriaListBoxItem>\n  );\n}\n\n/**\n * Renders the header component for the ListBox.\n *\n * @component\n * @param {React.ComponentProps<typeof AriaHeader>} props - The props for the ListBoxHeader component.\n * @param {string} [props.className] - The class name for the ListBoxHeader component.\n * @returns {JSX.Element} The rendered ListBoxHeader component.\n */\nfunction ListBoxHeader({\n  className,\n  ...props\n}: React.ComponentProps<typeof AriaHeader>): JSX.Element {\n  return (\n    <AriaHeader\n      className={cn('px-2 py-1.5 text-sm font-semibold', className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  ListBox,\n  ListBoxCollection,\n  ListBoxHeader,\n  ListBoxItem,\n  ListBoxSection,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
