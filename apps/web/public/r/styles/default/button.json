{
  "name": "button",
  "type": "registry:ui",
  "dependencies": ["react-aria-components", "class-variance-authority"],
  "files": [
    {
      "path": "ui/button.tsx",
      "content": "'use client';\n\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport {\n  Button as AriaButton,\n  type ButtonProps as AriaButtonProps,\n  composeRenderProps,\n} from 'react-aria-components';\n\nimport { cn } from '~/libs/utils';\n\n/**\n * Represents the variants and default styles for a button component.\n *\n * @remarks\n * The `buttonVariants` object contains the following properties:\n * - `variants`: An object that defines different variants of the button, such as `default`, `destructive`, `outline`, `secondary`, `ghost`, and `link`.\n * - `size`: An object that defines different sizes of the button, such as `default`, `sm`, `lg`, and `icon`.\n * - `defaultVariants`: An object that specifies the default variant and size for the button.\n */\nconst buttonVariants = cva(\n  [\n    'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors',\n    /* Disabled */\n    'data-[disabled]:pointer-events-none data-[disabled]:opacity-50 ',\n    /* Focus Visible */\n    'data-[focus-visible]:outline-none data-[focus-visible]:ring-2 data-[focus-visible]:ring-ring data-[focus-visible]:ring-offset-2',\n    /* Resets */\n    'focus-visible:outline-none',\n  ],\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground data-[hovered]:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground data-[hovered]:bg-destructive/90',\n        outline:\n          'border border-input bg-background data-[hovered]:bg-accent data-[hovered]:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground data-[hovered]:bg-secondary/80',\n        ghost: 'data-[hovered]:bg-accent data-[hovered]:text-accent-foreground',\n        link: 'text-primary underline-offset-4 data-[hovered]:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'size-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\n/**\n * Represents the props for the Button component.\n */\ntype ButtonProps = {} & AriaButtonProps & VariantProps<typeof buttonVariants>;\n\n/**\n * Renders a button component.\n *\n * @component\n * @param {ButtonProps} props - The button component props.\n * @param {string} [props.className] - The CSS class name for the button.\n * @param {string} [props.variant] - The variant of the button (e.g., \"primary\", \"secondary\").\n * @param {string} [props.size] - The size of the button (e.g., \"small\", \"medium\", \"large\").\n * @returns {JSX.Element} The rendered button component.\n */\nfunction Button({\n  className,\n  variant,\n  size,\n  ...props\n}: ButtonProps): JSX.Element {\n  return (\n    <AriaButton\n      className={composeRenderProps(className, (className) =>\n        cn(\n          buttonVariants({\n            variant,\n            size,\n            className,\n          }),\n        ),\n      )}\n      {...props}\n    />\n  );\n}\n\nexport type { ButtonProps };\nexport { Button, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
