{
  "name": "checkbox",
  "type": "registry:ui",
  "dependencies": ["react-aria-components"],
  "registryDependencies": [
    "https://ui.dev-grove.com/r/styles/default/field.json"
  ],
  "files": [
    {
      "path": "ui/checkbox.tsx",
      "content": "'use client';\n\nimport {\n  Checkbox as AriaCheckbox,\n  CheckboxGroup as AriaCheckboxGroup,\n  type CheckboxGroupProps as AriaCheckboxGroupProps,\n  type CheckboxProps as AriaCheckboxProps,\n  composeRenderProps,\n  Text,\n  type ValidationResult as AriaValidationResult,\n} from 'react-aria-components';\n\nimport { cn } from '@/libs/utils';\n\nimport { FieldError, Label, labelVariants } from './field';\nimport { Icons } from './icons';\n\n/**\n * Represents a checkbox group component.\n */\nconst CheckboxGroup = AriaCheckboxGroup;\n\n/**\n * Renders a checkbox component.\n *\n * @component\n * @param {AriaCheckboxProps} props - The props for the checkbox component.\n * @param {string} [props.className] - The class name for the checkbox component.\n * @param {React.ReactNode} [props.children] - The children for the checkbox component.\n * @returns {JSX.Element} The rendered checkbox component.\n */\nfunction Checkbox({\n  className,\n  children,\n  ...props\n}: AriaCheckboxProps): JSX.Element {\n  return (\n    <AriaCheckbox\n      className={composeRenderProps(className, (className) =>\n        cn(\n          'group flex items-center gap-x-2',\n          /* Disabled */\n          'data-[disabled]:cursor-not-allowed data-[disabled]:opacity-70',\n          labelVariants,\n          className,\n        ),\n      )}\n      {...props}\n    >\n      {composeRenderProps(children, (children, renderProps) => (\n        <>\n          <div\n            className={cn(\n              'flex size-4 shrink-0 items-center justify-center rounded-sm border border-primary text-current ring-offset-background',\n              /* Focus Visible */\n              'group-data-[focus-visible]:outline-none group-data-[focus-visible]:ring-2 group-data-[focus-visible]:ring-ring group-data-[focus-visible]:ring-offset-2',\n              /* Selected */\n              'group-data-[indeterminate]:bg-primary group-data-[selected]:bg-primary group-data-[indeterminate]:text-primary-foreground  group-data-[selected]:text-primary-foreground',\n              /* Disabled */\n              'group-data-[disabled]:cursor-not-allowed group-data-[disabled]:opacity-50',\n              /* Invalid */\n              'group-data-[invalid]:border-destructive group-data-[invalid]:group-data-[selected]:bg-destructive group-data-[invalid]:group-data-[selected]:text-destructive-foreground',\n              /* Resets */\n              'focus-visible:outline-none',\n            )}\n          >\n            {renderProps.isIndeterminate ? (\n              <Icons.Minus className=\"size-4\" />\n            ) : renderProps.isSelected ? (\n              <Icons.Check className=\"size-4\" />\n            ) : null}\n          </div>\n          {children}\n        </>\n      ))}\n    </AriaCheckbox>\n  );\n}\n\n/**\n * Props for the GroveCheckboxGroup component.\n *\n * @typedef {Object} GroveCheckboxGroupProps\n * @property {string} [label] - The label for the checkbox group.\n * @property {string} [description] - The description for the checkbox group.\n * @property {string | ((validation: AriaValidationResult) => string)} [errorMessage] - The error message for the checkbox group.\n * @property {AriaCheckboxGroupProps} [AriaCheckboxGroupProps] - Additional props for the AriaCheckboxGroup component.\n */\ntype GroveCheckboxGroupProps = {\n  label?: string;\n  description?: string;\n  errorMessage?: string | ((validation: AriaValidationResult) => string);\n} & AriaCheckboxGroupProps;\n\n/**\n * Renders a group of checkboxes with a label, description, and error message.\n *\n * @component\n * @param {GroveCheckboxGroupProps} props - The props for the GroveCheckboxGroup component.\n * @param {string} [props.className] - The class name for the checkbox group.\n * @param {string} [props.label] - The label for the checkbox group.\n * @param {string} [props.description] - The description for the checkbox group.\n * @param {string | ((validation: AriaValidationResult) => string)} [props.errorMessage] - The error message for the checkbox group.\n * @param {React.ReactNode} [props.children] - The children for the checkbox group.\n * @returns {JSX.Element} The rendered checkbox group component.\n */\nfunction GroveCheckboxGroup({\n  className,\n  label,\n  description,\n  errorMessage,\n  children,\n  ...props\n}: GroveCheckboxGroupProps): JSX.Element {\n  return (\n    <CheckboxGroup\n      className={composeRenderProps(className, (className) =>\n        cn('group flex flex-col gap-2', className),\n      )}\n      {...props}\n    >\n      {composeRenderProps(children, (children) => (\n        <>\n          <Label>{label}</Label>\n          {children}\n          {description && (\n            <Text className=\"text-sm text-muted-foreground\" slot=\"description\">\n              {description}\n            </Text>\n          )}\n          <FieldError>{errorMessage}</FieldError>\n        </>\n      ))}\n    </CheckboxGroup>\n  );\n}\n\nexport type { GroveCheckboxGroupProps };\nexport { Checkbox, CheckboxGroup, GroveCheckboxGroup };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
